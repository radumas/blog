<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MISTI Internship with The LTC</title>
    <description></description>
    <link>http://radumas.info/blog/</link>
    <atom:link href="http://radumas.info/blog/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Sun, 08 May 2016 15:21:35 -0400</pubDate>
    <lastBuildDate>Sun, 08 May 2016 15:21:35 -0400</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>Using Bus GPS Data to Generate Street Speeds with OpenTraffic</title>
        <description>&lt;p&gt;When you say you work in transportation, it is common in major cities for people to complain to you about the uniquely horrible traffic there. Rio is certainly no exception, and it does have the &lt;a href=&quot;http://urbandemographics.blogspot.com.br/2014/11/the-evolution-of-commute-times-in.html&quot;&gt;longest commute times in Brazil&lt;/a&gt;. What seems unique (to me) here is the semi-predictable reliability of the traffic. Since most public transit riders travel in buses in mixed-traffic as opposed to BRT, Metro, Boat, or Gondola (which, due to gang violence, has its own unique reliability issues), this affects a large proportion of commuters. Unreliability can seriously affect peoples’ lives: if a typical 1hr commute can &lt;em&gt;occasionally&lt;/em&gt; be &lt;strong&gt;2 hours&lt;/strong&gt; (or more), do you buffer your commute time according to the occasional disastrous conditions?&lt;/p&gt;

&lt;p&gt;Though I heard many stories of this lack reliability in travel speeds on the street network, no one had any data beyond anecdotes and hearsay. Though so-called “indigenous knowledge”, the experiences of locals, can be valuable, I was taught to rely on impersonal data, preferably lots of it. Before arriving here in Rio I had heard of &lt;a href=&quot;https://opentraffic.io&quot;&gt;OpenTraffic.io&lt;/a&gt;. It is an Open-Source (free to use and free to modify the code) platform built by a partnership of Conveyal, the World Bank, Mapbox and Mapzen which aims to collect GPS traces from fleets of vehicles in cities around the world and eventually provide historic traffic speeds in &lt;a href=&quot;http://www.openstreetmap.org&quot;&gt;Open Street Map&lt;/a&gt;, an API, and other formats. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://opentraffic.io/img/process.png&quot; alt=&quot;&#39;Open Traffic Diagram (C) 2015 opentraffic&#39;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Data on traffic is currently expensive to collect, though with ubiquitous GPS sensors the passive collection of massive amounts of vehicle locations is possible. Most of the time this data is proprietary, such as data from the crowd-sourced Waze app, which can be bought from Google, or the data collected by large commercial fleets such as FedEx or UPS for their private uses. But cities can have access to data from fleets of city-owned vehicles, or from city-managed vehicles such as taxis and buses, and these are the kinds of data generators that OpenTraffic is interested in collecting data from. Input a collection of data points consisting of a vehicle id and a timestamped GPS position, and the OpenTraffic engine will produce anonymized information on traffic speeds on city streets.&lt;/p&gt;

&lt;p&gt;With this data one can more accurately model accessibility, the number of potential opportunities an individual can access using either bus or car modes. It will allow apps to better represent travel times for users seeking directions. With more accurate travel time and accessibility estimation more informed decision-making can occur over which transportation investments to make.&lt;/p&gt;

&lt;h1 id=&quot;further-reading-on-this-project&quot;&gt;Further Reading on this Project&lt;/h1&gt;
&lt;p&gt;The following other posts will appear in this series (check back for links):&lt;br /&gt;
1. Explaining how I pulled and archived data from FeTranspor (the local bus conglomerate)
2. A introductory analysis of the bus GPS data
3. How I setup OpenTraffic and processed the gps data to work with the platform
4. Analysis of the resulting traffic speeds and the coverage of the bus GPS data&lt;/p&gt;
</description>
        <pubDate>Wed, 16 Sep 2015 00:00:00 -0400</pubDate>
        <link>http://radumas.info/blog/opentraffic/2015/09/16/Using-bus-gps-data-measure-traffic.html</link>
        <guid isPermaLink="true">http://radumas.info/blog/opentraffic/2015/09/16/Using-bus-gps-data-measure-traffic.html</guid>
        
        <category>traffic</category>
        
        <category>opentraffic</category>
        
        
        <category>opentraffic</category>
        
      </item>
    
      <item>
        <title>Updating a Leaflet map Made with QGIS2web</title>
        <description>&lt;p&gt;In a &lt;a href=&quot;/mapping/2015/07/24/qgisweb.html&quot;&gt;previous post&lt;/a&gt; I created a Leaflet webmap using QGIS and the qgis2web plugin. I had a list of modifications that I wanted to perform on the map after creating the code using that plugin. &lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Some further things I would like to work on with this map:&lt;br /&gt;
1. Displaying the legend in two columns&lt;br /&gt;
2. Disabling scroll zoom &lt;a href=&quot;http://gis.stackexchange.com/questions/111887/leaflet-mouse-wheel-zoom-only-after-click-on-map&quot;&gt;without clicking on the map&lt;/a&gt;&lt;br /&gt;
3. Restricting zoom levels&lt;br /&gt;
4. I want to figure out how to display a table of the data as well, and then maybe do some linking and brushing to highlight, for example, the stations with the oldest average population.  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;disabling-scroll-zoom&quot;&gt;Disabling Scroll Zoom&lt;/h1&gt;

&lt;p&gt;Previously, if scrolling down in the middle of the page, you would get the behaviour in the map below:&lt;/p&gt;

&lt;div class=&quot;leaflet-map&quot;&gt;
    &lt;iframe src=&quot;/maps/transit_working_age/index.html&quot; height=&quot;675&quot; width=&quot;900&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&amp;nbsp; &lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;This can be disabled, as per this &lt;a href=&quot;http://gis.stackexchange.com/questions/111887/leaflet-mouse-wheel-zoom-only-after-click-on-map&quot;&gt;gis.stackexchange post&lt;/a&gt; by replacing the definition of the map variable:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;javascript
var map = L.map(&#39;map&#39;, {
            zoomControl:true, maxZoom:28, minZoom:1
        }).fitBounds([[-23.0310490725,-43.7439095692],[-22.4740929065,-42.9533150116]]);
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;with:&lt;br /&gt;
&lt;code&gt;javascript
var map = L.map(&#39;map&#39;, {
            zoomControl:true, maxZoom:28, minZoom:1, scrollWheelZoom: false
        }).fitBounds([[-23.0310490725,-43.7439095692],[-22.4740929065,-42.9533150116]]);
map.once(&#39;focus&#39;, function() { map.scrollWheelZoom.enable(); });
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Tada! You now have to click within the map to activate scroll wheel zooming.  &lt;/p&gt;

&lt;div class=&quot;leaflet-map&quot;&gt;
    &lt;iframe src=&quot;/maps/transit_working_age/index2.html&quot; height=&quot;675&quot; width=&quot;900&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&amp;nbsp; &lt;/iframe&gt;
&lt;/div&gt;

&lt;h1 id=&quot;restricting-zoom-level-to-layer-extent&quot;&gt;Restricting Zoom Level to Layer Extent&lt;/h1&gt;

&lt;p&gt;To prevent the map from being zoomed out beyond the extents of the layer, I added the following:
```javascript
        map.options.minZoom = map.getZoom();
`&lt;/p&gt;

&lt;h1 id=&quot;editing-the-legend&quot;&gt;Editing the Legend&lt;/h1&gt;

&lt;p&gt;The legend appears to be contained within the &lt;code&gt;L.control.layers()&lt;/code&gt; function. In order to remove the basemaps radio button, I passed it an empty variable:
&lt;code&gt;javascript
    L.control.layers({},overlayMaps).addTo(map);
&lt;/code&gt;  &lt;/p&gt;

&lt;p&gt;The order of the layers not being respected when turned on and off from the layer control panel is a frustrating issue in leaflet, one that is rumoured to be resolved in a future version of Leaflet. After quite a bit of search, and &lt;a href=&quot;https://github.com/tomchadwin/qgis2web/issues/96&quot;&gt;trial and error&lt;/a&gt;, I came up with a solution that will hopefully be soon incorporated into the QGIS plugin. Modify the &lt;code&gt;restackLayers&lt;/code&gt; function to the code below, and add the event listener to a layer control &lt;code&gt;overlayadd&lt;/code&gt; event.
```javascript&lt;/p&gt;

&lt;p&gt;function restackLayers() {
        for (index = 0; index &amp;lt; layerOrder.length; index++) {
            layerOrder[index].bringToFront();
        }
}
map.on(‘overlayadd’, restackLayers);&lt;/p&gt;

&lt;p&gt;```&lt;/p&gt;

</description>
        <pubDate>Fri, 31 Jul 2015 12:00:00 -0400</pubDate>
        <link>http://radumas.info/blog/mapping/2015/07/31/Modifying-a-webmap.html</link>
        <guid isPermaLink="true">http://radumas.info/blog/mapping/2015/07/31/Modifying-a-webmap.html</guid>
        
        <category>QGIS</category>
        
        <category>leaflet</category>
        
        <category>QGIS2web</category>
        
        
        <category>mapping</category>
        
      </item>
    
      <item>
        <title>Jekyll Setup</title>
        <description>&lt;p&gt;There is one rather important thing missing from the otherwise excellent jekyll gh-pages tutorial on &lt;a href=&quot;https://help.github.com/articles/using-jekyll-with-pages/&quot;&gt;github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You could &lt;strong&gt;almost&lt;/strong&gt; fork any jekyll gh-pages theme and it would run out of the box, but for two things:&lt;br /&gt;
1. You have to push an initial commit to the gh-pages branch in order to get github to build the page.&lt;br /&gt;
2. For a project page, (as opposed to a user page), if you want the css stylings to appear (a big part of the appeal of jekyll) &lt;a href=&quot;http://jekyllrb.com/docs/github-pages/#project-page-url-structure&quot;&gt;you have to edit&lt;/a&gt; the &lt;code&gt;baseurl&lt;/code&gt; variable in &lt;code&gt;_config.yml&lt;/code&gt; to be the project’s name, ex: &lt;code&gt;baseurl: &quot;/projectname&quot;&lt;/code&gt;. Note the leading &lt;code&gt;/&lt;/code&gt; but no trailing one.&lt;/p&gt;
</description>
        <pubDate>Tue, 28 Jul 2015 10:00:00 -0400</pubDate>
        <link>http://radumas.info/blog/jekyll/2015/07/28/Jekyll-setup.html</link>
        <guid isPermaLink="true">http://radumas.info/blog/jekyll/2015/07/28/Jekyll-setup.html</guid>
        
        <category>jekyll</category>
        
        <category>css</category>
        
        
        <category>jekyll</category>
        
      </item>
    
      <item>
        <title>QGIS to Leaflet with QGIS2web</title>
        <description>&lt;p&gt;My first leaflet map using the &lt;a href=&quot;https://github.com/tomchadwin/qgis2web&quot;&gt;qgis2web&lt;/a&gt; QGIS plugin. It is surprisingly easy to use to make nice Leaflet maps. Though unfortunately my custom rio metro .svg icons &lt;a href=&quot;https://github.com/tomchadwin/qgis2web/issues/95&quot;&gt;could not display&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;exploring-census-data-for-rio-de-janeiro&quot;&gt;Exploring census data for Rio de Janeiro.&lt;/h2&gt;
&lt;p&gt;The map below was made using census data on the ages of the literate population (ages 5-80), and the population age (ages 1-100). The work flow to create this map is described &lt;a href=&quot;#workflow&quot;&gt;below&lt;/a&gt;.  &lt;/p&gt;

&lt;div class=&quot;leaflet-map&quot;&gt;
    &lt;iframe src=&quot;/maps/transit_working_age/index.html&quot; height=&quot;675&quot; width=&quot;900&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&amp;nbsp; &lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;Click &lt;a href=&quot;/maps/transit_working_age/index.html&quot;&gt;here&lt;/a&gt; for a full page map. &lt;/p&gt;

&lt;h2 id=&quot;thoughts&quot;&gt;Thoughts&lt;/h2&gt;
&lt;p&gt;The metro serves the denser areas (obviously), though the favela of Complexo Alemao, served by the gondola, is very high density.&lt;br /&gt;
The difference in average age was rather remarkable. With much older average ages in the core and substantially younger ones in the periphery. The difference is particularly striking when looking at Line 1 of the Metro versus Line 2. Many (American) tourists wonder why Line 1 doesn’t extend further into Ipanema and Leblon, parts of the city of particular importance to tourists. But anecdotal evidence from the few times I’ve taken the metro in rush points to far more people taking Line 2 from the North West of the city into the center for work. &lt;/p&gt;

&lt;h2 id=&quot;workflow&quot;&gt;Workflow:&lt;/h2&gt;
&lt;p&gt;I made the map below using the following steps:&lt;br /&gt;
1. I made 1km buffers around every active BRT, Commuter Rail, Gondola, and Metro station.&lt;br /&gt;
2. I intersected these buffers with census geometries, calculating the area of each polygon before and after the intersection.&lt;br /&gt;
3. I summed up the columns for literate persons from age 18 to 65 in postgresql to get the total working age population for each polygon.&lt;br /&gt;
4. In order to get an “average age” I multiplied each age column from 1 to 100 by the number of people in that age column. The following sed command was useful &lt;code&gt;sed -r &#39;s_([0-9]+)_\1 * &amp;amp; \+_&#39; &amp;lt;age_columns.txt &amp;gt;age_multiply.txt&lt;/code&gt; to repeat the number of the column (the age) after a multiplication symbol.&lt;br /&gt;
5. I then summed these two variables and unioned the shapes with:  &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tipo_de_si&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  
    &lt;span class=&quot;k&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_area&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;original_area&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;working_age_pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;  
	&lt;span class=&quot;n&quot;&gt;ST_Union&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;geom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;geom&lt;/span&gt;  
    &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rio_stations_stats&lt;/span&gt;  
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alfab_rio_stations_1000&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;  
    &lt;span class=&quot;k&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tipo_de_si&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Finally:&lt;br /&gt;
6. I colour-coded each line according to their official colours.&lt;br /&gt;
7. And then used the plugin to create the map below, exporting the map to its own folder.
8. The map displayed when testing jekyll locally, but the data wouldn’t load on gh-pages, so I had to do a small bit of editing. I had to move the contents of the &lt;code&gt;data/&lt;/code&gt; folder to the root folder of the map (where the map’s &lt;code&gt;index.html&lt;/code&gt; is located). And then edit the source paths in &lt;code&gt;index.html&lt;/code&gt; to remove “data”&lt;br /&gt;
&lt;img src=&quot;/img/2015-07-24/map_change.png&quot; alt=&quot;screenshot1&quot; /&gt;&lt;br /&gt;
9. I then embedded the map into this post using an iframe. In order to get the iframe to be “responsive” (change size depending on the size of the window) &lt;a href=&quot;http://stackoverflow.com/questions/31660273/markdown-jekyll-insert-an-iframe-that-fills-the-container&quot;&gt;I had to add some code&lt;/a&gt; to the css &lt;a href=&quot;https://github.com/radumas/coppe-ltc/blob/f8bfc63002f0be5eea3ce301d0dd87e15bfdb07a/css/style.scss#L633&quot;&gt;stylesheet&lt;/a&gt; and then wrapped the &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; tags with a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;. Unfortunately, mysteriously, this broke some markdown formatting &lt;strong&gt;outside&lt;/strong&gt; the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; tags, so I switched markdown parser to &lt;code&gt;kramdown&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;html  
    &amp;lt;div class = &quot;leaflet-map&quot;&amp;gt;
    &amp;lt;iframe src=&quot;/maps/transit_working_age/index.html&quot; height=&quot;600&quot; width=&quot;900&quot; frameborder=&quot;0&quot; allowfullscreen&amp;gt;&amp;amp;nbsp; &amp;lt;/iframe&amp;gt;
    &amp;lt;/div&amp;gt;    
&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;wishes&quot;&gt;Wishes&lt;/h2&gt;

&lt;h3 id=&quot;qgis2web-plugin&quot;&gt;QGIS2web plugin&lt;/h3&gt;
&lt;p&gt;It would be nice if the plugin:&lt;br /&gt;
1. Could let you edit the variable names in the popups.&lt;br /&gt;
2. Didn’t display the basemap radio button.&lt;br /&gt;
3. Respected layer order. If you turn a layer off and then on, it automatically displays on top. &lt;/p&gt;

&lt;h3 id=&quot;things-to-play-with&quot;&gt;Things to play with&lt;/h3&gt;
&lt;p&gt;Some further things I would like to work on with this map:&lt;br /&gt;
1. Displaying the legend in two columns&lt;br /&gt;
2. Disabling scroll zoom &lt;a href=&quot;http://gis.stackexchange.com/questions/111887/leaflet-mouse-wheel-zoom-only-after-click-on-map&quot;&gt;without clicking on the map&lt;/a&gt;&lt;br /&gt;
3. Restricting zoom levels&lt;br /&gt;
4. I want to figure out how to display a table of the data as well, and then maybe do some linking and brushing to highlight, for example, the stations with the oldest average population.  &lt;/p&gt;
</description>
        <pubDate>Fri, 24 Jul 2015 00:00:00 -0400</pubDate>
        <link>http://radumas.info/blog/mapping/2015/07/24/qgisweb.html</link>
        <guid isPermaLink="true">http://radumas.info/blog/mapping/2015/07/24/qgisweb.html</guid>
        
        <category>QGIS</category>
        
        <category>leaflet</category>
        
        <category>census</category>
        
        
        <category>mapping</category>
        
      </item>
    
  </channel>
</rss>
